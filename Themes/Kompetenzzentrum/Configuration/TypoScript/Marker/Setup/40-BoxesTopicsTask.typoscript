//############################################################################
// Content
//############################################################################
page {
    10 {
        variables {


            //=================================================================
            // Boxes overview - special case for RKW Map
            //=================================================================
            boxOverviewBoxesMap  = COA
            boxOverviewBoxesMap {

                10 = CONTENT
                10 {
                    table = tt_content
                    select {
                        where = colPos = 13
                        pidInList = {$boxesTopicsTaskConfig.pid}
                        orderBy = sorting
                        languageField = sys_language_uid
                    }

                    // individual parsing
                    renderObj = CASE
                    renderObj {
                        key.field = CType

                        // default: ignore all
                        default = COA
                        default >

                        // render only image
                        text = COA
                        text {

                            // set header
                            10 = TEXT
                            10 {
                                field = header
                                wrap = <header><p>|</p></header>
                                required = 1
                            }

                            // set content
                            20 = TEXT
                            20 {
                                field = bodytext
                                wrap = <div class="box__content">|</div>
                                required = 1

                                # HTML-Parsing
                                stdWrap.parseFunc =< lib.parseFunc_RTE
                                stdWrap.HTMLparser = 1
                                stdWrap.HTMLparser {
                                    keepNonMatchedTags = 0
                                    allowTags = a,p
                                    nesting = 0
                                    htmlSpecialChars = 0
                                    xhtml_cleaning = 0
                                }
                            }

                            // set footer
                            30 = TEXT
                            30 {

                                field = tx_rkwbasics_header_link_caption

                                // set wrap and link
                                stdWrap.outerWrap = <footer><p>|</p></footer>
                                stdWrap.typolink {
                                    parameter.field = header_link
                                    parameter.insertData = 1
                                    ATagBeforeWrap = 1
                                    ATagParams = class="button"
                                    wrap = <span>|</span>

                                    // eTracker
                                    userFunc < lib.parseFunc_RTE.tags.link.typolink.userFunc
                                }

                                // only if link is set
                                if.isTrue.field = tx_rkwbasics_header_link_caption
                                if.isTrue.if.isTrue.field = header_link


                            }

                        }

                        stdWrap {
                            wrap = <div class="box">|</div>
                            required = 1
                        }
                    }
                }
            }

            //==========================================================
            // Special boxes
            //==========================================================
            boxSpecial = TEXT

        }
    }
}

