// ############################################################################
// Tuning for contents
// ############################################################################
content {
	//===============================================================
	// Default headline
	//===============================================================
	//  type=int[1-5]; label=Default Header type: Enter the number of the header layout to be used by default.
	defaultHeaderType = 2

}

styles.content {

	//===============================================================
	// Distances
	//===============================================================
	// type= int+; Abstand vor jedem Content-Element (Sollte IMMER 0 sein!)
	spaceBefore = 0

	// type= int+; Abstand vor jedem Content-Element (Sollte IMMER 0 sein!)
	spaceAfter = 0

	//===============================================================
	// Link elements
	//===============================================================
	links {
	
		// Standard-Targets (extern und intern)
		extTarget = _blank
		target = {$PAGE_TARGET}
	
		// type = commalist; Tags, die verlinkt werden dürfen
		allowTags = b,i,u,a,img,br,div,center,pre,font,hr,sub,sup,p,strong,em,li,ul,ol,blockquote,strike,del,ins,span,h1,h2,h3,h4,h5,h6,address
	}
	
	// =======================================================================================
	// Text/Image elements
	//===============================================================
	imgtext {
	
		// type=int+; Maximale Breite, die ein Imageblock haben kann. Wichtig: maxImageWidth überschreibt diesen Wert!!!
		maxW = 1000
	
		// type=int+; Maximale Breite, die ein Imageblock haben kann, wenn Text drum herum fließt (Default: 50%).
		maxWInText =

    	// cat=content/cImage/b4; type=options[Default img-tag=default, img-tag with alternate sources as srcset-attribute=srcset, picture-tag with source-child-tags=picture, img-tag with alternate sources as data-attributes=data]; label= Rendering-type for responsive images.
  		layoutKey = picture
	
		// type=int+; label= Click-enlarge Image Höhe & Breite
		linkWrap.width = 800m
		linkWrap.height = 600m
	
		// type=boolean; Erzwingt ein neues Popup für jeden Click-Enlarge (Wichtig wegen evtl. abweichender Größen!)
		linkWrap.newWindow = 1
	
		// type=boolean; If this is checked, then the image text (caption, alt, title, longdesc) will be split by each line and they will appear on the corresponding images in the imagelist.
		imageTextSplit = 1
	
		// Images, empty title handling: How will the 'title' attribute be handled if no title is given for an image.
		// Possible choices: "keepEmpty", "useAlt" or "removeAttr". Recommended for accessibility is "removeAttr". For correct tooltips on IE, use "keepEmpty". For previous TYPO3 behaviour, use "useAlt".
		emptyTitleHandling = removeAttr
	
		//  type=boolean; label= Images, title in link: Do you want the 'title' attribute to be added to the surrounding <a> tag, if present?
		// Recommended for accessibility is "true".
		titleInLink = 1
	
		// type=boolean; label= Images, title in link and IMG: If you have the title in the <a>-tag (titleInLink=true), you don't get the 'title' in the <img>-tag.
		// IE will not show the tooltip anymore. So to get the 'title' in <img> too (to keep IE happy), set this too. Recommended for accessibility is "false". For correct tooltips on IE, set this to "true".
		titleInLinkAndImg = 0
	
		// type=int[0-100]; label= Advanced, Column space: Horizontal distance between images in a block in content elements of type "Image" or "Text w/Image".
		// If you change this manually in your CSS, you need to adjust this setting accordingly !!!
		colSpace = 10
	
		// type=int[0-100]; label= Advanced, Row space: Vertical distance after each image row in content elements of type "Image" or "Text w/Image".
		// If you change this manually in your CSS, you need to adjust this setting accordingly !!!
		rowSpace = 10
	
		// type=int[0-100]; label= Advanced, Margin to text: Horizontal distance between an imageblock and text in content elements of type "Text w/Image".
		textMargin = 10
	
		// cat=content/cImage/i1; type=color; label= Image border, color: Bordercolor of images in content elements when "Border"-option for element is set.
		borderColor = black
	
		// cat=content/cImage/i2; type=int[0-100]; label= Image border, thickness: Thickness of border around images in content elements when "Border"-option for element is set.
		// Wir machen das bitte über CSS!
		borderThick = 0
	
		// cat=content/cImage/i3; type=int+; label= Image border, padding: Padding left and right to the image, around the border.
		borderSpace = 0
	
		// cat=content/cImage/i4; type=string; label= Image border CSS-selector: If you want your border to apply elsewhere, change this setting.
		// E.g. to apply to the whole image+caption, use 'DIV.csc-textpic-border DIV.csc-textpic-imagewrap .csc-textpic-image'.
		borderSelector = DIV.{$styles.content.imgtext.borderClass} DIV.csc-textpic-imagewrap .csc-textpic-image IMG, DIV.{$styles.content.imgtext.borderClass} DIV.csc-textpic-single-image IMG
	
		// cat=content/cImage/i5; type=string; label= Image border class: The name of the CSS class for creating image borders
		borderClass = csc-textpic-border  
	
	}
	
	//===============================================================
	// Upload elements
	//===============================================================
	uploads {
		jumpurl_secure =
		jumpurl_secure_mimeTypes = pdf=application/pdf, doc=application/msword
		jumpurl =
		
		// cat=content/cUploads; type=string; label=Labels of file sizes: The labels for bytes, kilobytes, megabytes and gigabytes
		filesizeBytesLabels = " | Kb| Mb| Gb"
	}
	
	//===============================================================
	// Targets for results
	//===============================================================
	searchresult {
		resultTarget = {$PAGE_TARGET}
		target = {$PAGE_TARGET}
	}
	
	//===============================================================
	// Media elements
	//===============================================================
	media {
	
		// cat=content/cMedia/j1; type=; label= Video Player: configure the path to the video player
		videoPlayer = typo3/contrib/flashmedia/flvplayer.swf
	
		// cat=content/cMedia/j2; type=int+; label= Media Video Width: define the default width for the media video
		defaultVideoWidth = 600
	
		// cat=content/cMedia/j3; type=int+; label= Media Video Height: define the default height for the media video
		defaultVideoHeight = 400
	
		// cat=content/cMedia/j4; type=; label= Audio Player: configure the path to the video player
		audioPlayer = typo3/contrib/flashmedia/player.swf	
	
		// cat=content/cMedia/j5; type=int+; label= Media Audio Width: define the default width for the media audio
		defaultAudioWidth = 300
	
		// cat=content/cMedia/j6; type=int+; label= Media Audio Height: define the default height for the media audio
		defaultAudioHeight = 30
	}
	
}



