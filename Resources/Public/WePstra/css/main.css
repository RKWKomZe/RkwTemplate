@charset "UTF-8";
.old-browser {
  display: none; }

html.old-ie .old-browser {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
  display: block;
  width: 100%;
  background: #fff; }
  html.old-ie .old-browser p {
    padding: 40px 20px;
    text-align: center;
    font-size: 30px; }

.mobile-version-info {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 10;
  background: #fff; }
  .mobile-version-info p {
    position: absolute;
    top: 50%;
    left: 50%;
    color: #000;
    font-family: "ff-tisa-web-pro", Times, serif;
    font-size: 40px;
    text-align: center;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%); }
  @media (min-width: 768px) {
    .mobile-version-info {
      display: none; } }

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  overflow-y: scroll;
  height: 100%; }
  html.no-scroll {
    overflow-y: hidden !important; }

body {
  height: 100%;
  background: #fff;
  color: #666;
  font-family: "ff-tisa-sans-web-pro", sans-serif;
  font-size: 16px; }
  body * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    list-style: none; }
    body *:before, body *:after {
      margin: 0;
      padding: 0;
      box-sizing: border-box; }

.container {
  display: block;
  width: 100%;
  max-width: 1475px;
  margin: 0 auto; }
  .container:after {
    content: "";
    display: table;
    clear: both; }
  .row:before, .row:after {
    content: "";
    display: table; }
  .row:after {
    clear: both; }
  .row {
    zoom: 1; }
  @media screen and (max-width: 1366px) {
    .container {
      max-width: 786px; } }
  @media screen and (max-width: 959px) {
    .container {
      max-width: 590px; } }

.row {
  padding-left: 0 !important;
  padding-right: 0 !important;
  margin-left: -16px;
  margin-right: -16px; }
  [class*="no-gutter"] > .row {
    margin-left: 0 !important;
    margin-right: 0 !important; }
  .row .row {
    margin-left: -16px;
    margin-right: -16px; }
  @media screen and (min-width: 1920px) {
    .row .row {
      margin-left: -16px;
      margin-right: -16px; } }
  @media screen and (max-width: 1919px) {
    .row .row {
      margin-left: -16px;
      margin-right: -16px; } }
  @media screen and (max-width: 1599px) {
    .row .row {
      margin-left: -16px;
      margin-right: -16px; } }
  @media screen and (max-width: 1366px) {
    .row .row {
      margin-left: -16px;
      margin-right: -16px; } }
  @media screen and (max-width: 959px) {
    .row .row {
      margin-left: -16px;
      margin-right: -16px; } }
  @media screen and (max-width: 719px) {
    .row .row {
      margin-left: -16px;
      margin-right: -16px; } }
  @media screen and (max-width: 479px) {
    .row .row {
      margin-left: -16px;
      margin-right: -16px; } }

h1 {
  font-family: "ff-tisa-sans-web-pro", sans-serif;
  font-size: 46px; }
  @media screen and (max-width: 1366px) {
    h1 {
      font-size: 42px; } }

h2 {
  font-family: "ff-tisa-sans-web-pro", sans-serif;
  font-size: 32px; }
  @media screen and (max-width: 1366px) {
    h2 {
      font-size: 28px; } }

/*
 * Fonts order:
 * eot svg woff ttf
 */
@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?k30352");
  src: url("../fonts/icomoon.eot?k30352#iefix") format("embedded-opentype"), url("../fonts/icomoon.woff2?k30352") format("woff2"), url("../fonts/icomoon.ttf?k30352") format("truetype"), url("../fonts/icomoon.woff?k30352") format("woff"), url("../fonts/icomoon.svg?k30352#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"]:before, [class*=" icon-"]:before {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-mail:before {
  content: "\e60f"; }

.icon-phone:before {
  content: "\e612"; }

.page-header {
  position: relative;
  height: 87px;
  background-color: #761f36; }
  .page-header__content {
    position: relative;
    display: block;
    height: 100%; }
  .page-header__logo-container {
    position: absolute;
    top: 50%;
    width: 100%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
    display: block;
    max-width: 210px;
    height: 50%; }
  .page-header__logo {
    display: block; }
  .page-header__logo-image {
    width: 100%; }

.page-footer {
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 5;
  width: 100%;
  height: 80px;
  background-color: #fff; }
  .page-footer__content {
    position: relative;
    height: 80px; }
  .page-footer__button-container {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 400px;
    height: 46px;
    text-align: center;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%); }
  .page-footer__button {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 400px;
    height: 46px;
    border: 2px solid transparent;
    border-radius: 8px;
    background-color: #d6007f;
    color: #fff;
    font-size: 22px;
    font-weight: bold;
    line-height: 44px;
    text-decoration: none;
    text-transform: uppercase;
    -webkit-transition: border .9s ease, background-color .9s ease, color .7s ease;
    transition: border .9s ease, background-color .9s ease, color .7s ease;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%); }
    .page-footer__button:hover {
      border-color: #d6007f;
      background-color: #fff;
      color: #d6007f; }

/*
 * Forms and form fields
 */
/* Input style */
input,
button,
select {
  vertical-align: middle;
  outline: none; }

textarea {
  vertical-align: top;
  outline: none; }

button,
select,
label,
input[type="reset"],
input[type="button"],
input[type="image"],
input[type="submit"],
input[type="radio"],
input[type="checkbox"] {
  cursor: pointer; }

button[disabled],
select[disabled],
label[disabled],
input[disabled][type="reset"],
input[disabled][type="button"],
input[disabled][type="image"],
input[disabled][type="submit"],
input[disabled][type="radio"],
input[disabled][type="checkbox"] {
  cursor: default; }

input[type="search"] {
  box-sizing: border-box; }

select,
input[type="text"],
input[type="password"],
input[type="email"],
input[type="number"],
input[type="tel"],
input[type="url"],
input[type="search"],
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="time"],
input[type="week"],
input[type="month"],
input[type="color"] {
  width: 100%; }

/*
 * Styles for WYSIWYG editors like TinyMCE or CKEditor
 */
.wysiwyg * + h1,
.wysiwyg * + h2,
.wysiwyg * + h3,
.wysiwyg * + h4,
.wysiwyg * + h5,
.wysiwyg * + h6,
.wysiwyg * + p,
.wysiwyg * + blockquote,
.wysiwyg * + ol,
.wysiwyg * + ul,
.wysiwyg * + dl,
.wysiwyg * + table,
.wysiwyg * + figure {
  margin-top: 18px; }

.wysiwyg li {
  position: relative;
  padding-left: 40px; }
  .wysiwyg li:before {
    content: '»';
    position: absolute;
    top: 0;
    left: 0;
    width: 28px;
    text-align: center; }
  .wysiwyg li + .wysiwyg li {
    margin-top: 10px; }
  .wysiwyg li ol,
  .wysiwyg li ul {
    margin-top: 0;
    margin-bottom: 0; }

.wysiwyg ol > li {
  counter-increment: ordered-list; }
  .wysiwyg ol > li:before {
    content: counter(ordered-list); }

.wysiwyg dt {
  font-weight: 700; }

.wysiwyg h1 {
  font-size: 32px;
  font-weight: 700; }

.wysiwyg h2 {
  font-size: 28px;
  font-weight: 700; }

.wysiwyg h3 {
  font-size: 24px;
  font-weight: 700; }

.wysiwyg h4 {
  font-size: 20px;
  font-weight: 700; }

.wysiwyg h5 {
  font-size: 18px;
  font-weight: 700; }

.wysiwyg h6 {
  font-size: 16px;
  font-weight: 700; }

.wysiwyg a {
  color: #009cdc;
  text-decoration: none; }
  .wysiwyg a:hover {
    color: #1465ff;
    text-decoration: underline; }

.wysiwyg img {
  display: inline-block;
  vertical-align: middle; }

.wysiwyg img[style*="float:left"],
.wysiwyg img[style*="float: left"],
.wysiwyg img[style*="float:right"],
.wysiwyg img[style*="float: right"] {
  padding-top: 10px;
  padding-bottom: 10px; }

.wysiwyg img[style*="float:left"],
.wysiwyg img[style*="float: left"] {
  padding-right: 10px; }

.wysiwyg img[style*="float:right"],
.wysiwyg img[style*="float: right"] {
  padding-left: 10px; }

.wysiwyg figure img {
  display: block; }

.wysiwyg blockquote {
  position: relative;
  font-style: italic; }
  .wysiwyg blockquote:before {
    content: open-quote;
    font-style: normal; }

.text-section {
  position: relative;
  background-size: 100%; }
  .text-section--second {
    background-position: 0px -35px; }
    @media screen and (max-width: 1366px) {
      .text-section--second {
        background-position: 0px -20px; } }
    @media screen and (max-width: 959px) {
      .text-section--second {
        background-position: 0px -16px; } }
  .text-section__top {
    position: absolute;
    top: -3.1%;
    left: 0;
    width: 100%;
    height: 35px; }
    @media screen and (max-width: 1366px) {
      .text-section__top {
        top: -1.3%; } }
    @media screen and (max-width: 959px) {
      .text-section__top {
        top: -0.9%; } }
  .text-section__top-triangle {
    position: absolute;
    background-size: calc(200% + 68px);
    width: calc(50% - 33px);
    height: 35px; }
    .text-section__top-triangle:nth-child(1) {
      left: 0; }
      .text-section__top-triangle:nth-child(1):after {
        position: absolute;
        right: -35px;
        content: '';
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 35px 0 0 35px;
        border-color: transparent transparent transparent #e0e0e0; }
        @media screen and (max-width: 1366px) {
          .text-section__top-triangle:nth-child(1):after {
            right: -19px;
            border-width: 20px 0 0 20px; } }
        @media screen and (max-width: 959px) {
          .text-section__top-triangle:nth-child(1):after {
            right: -16px;
            border-width: 16px 0 0 16px; } }
    .text-section__top-triangle:nth-child(2) {
      right: 0; }
      .text-section__top-triangle:nth-child(2):after {
        position: absolute;
        left: -35px;
        content: '';
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 0 0 35px 35px;
        border-color: transparent transparent #e0e0e0 transparent; }
        @media screen and (max-width: 1366px) {
          .text-section__top-triangle:nth-child(2):after {
            left: -19px;
            border-width: 0 0 20px 20px; } }
        @media screen and (max-width: 959px) {
          .text-section__top-triangle:nth-child(2):after {
            left: -16px;
            border-width: 0 0 16px 16px; } }
    @media screen and (max-width: 1366px) {
      .text-section__top-triangle {
        background-size: calc(200% + 38px);
        width: calc(50% - 18px);
        height: 20px; } }
    @media screen and (max-width: 959px) {
      .text-section__top-triangle {
        background-size: calc(200% + 30px);
        width: calc(50% - 16px);
        height: 16px; } }
  .text-section__container {
    position: relative; }
    .text-section__container--bottom {
      padding-bottom: 35px; }
  .text-section__title {
    padding-top: 50px;
    color: #333333;
    font-weight: 400; }
  .text-section__content {
    position: relative;
    height: 100%;
    padding-top: 40px;
    padding-bottom: 30px;
    font-size: 0; }
    .text-section__content--wide {
      padding-top: 40px; }
    .text-section__content--small {
      padding-top: 30px;
      padding-bottom: 10px; }
    .text-section__content--narrow {
      padding-top: 40px; }
    .text-section__content--medium {
      padding-top: 0; }
  .text-section__content-image {
    position: relative;
    display: inline-block;
    max-width: 20%;
    vertical-align: middle; }
    @media screen and (max-width: 1366px) {
      .text-section__content-image {
        max-width: 30%; } }
    .text-section__content-image--right {
      margin-left: 2%; }
      @media screen and (max-width: 1366px) {
        .text-section__content-image--right {
          margin-left: 0; } }
    .text-section__content-image--target {
      margin-right: 40px;
      margin-left: 10px; }
      @media screen and (max-width: 1366px) {
        .text-section__content-image--target {
          margin-right: 0;
          margin-left: 0; } }
    .text-section__content-image--left {
      max-width: 23%;
      margin-right: 1%; }
      @media screen and (max-width: 1366px) {
        .text-section__content-image--left {
          margin-right: 0; } }
  .text-section__content--narrow .text-section__content-image {
    max-width: 22%;
    padding-bottom: 45px; }
    @media screen and (max-width: 1366px) {
      .text-section__content--narrow .text-section__content-image {
        max-width: 30%; } }
  .text-section__content--medium .text-section__content-image {
    max-width: 25%;
    margin-left: 60px;
    padding-bottom: 60px; }
    @media screen and (max-width: 1366px) {
      .text-section__content--medium .text-section__content-image {
        margin-left: 0; } }
  .text-section__image {
    width: 100%;
    height: 100%; }
  .text-section__content-paragraph {
    position: relative;
    display: inline-block;
    max-width: 76%;
    padding: 22px 0;
    vertical-align: middle; }
    @media screen and (max-width: 1366px) {
      .text-section__content-paragraph {
        max-width: 70%; } }
  .text-section__content--narrow .text-section__content-paragraph {
    max-width: 70%;
    margin-right: 8%; }
    @media screen and (max-width: 1366px) {
      .text-section__content--narrow .text-section__content-paragraph {
        margin-right: 0; } }
  .text-section__content--medium .text-section__content-paragraph {
    max-width: 72%;
    padding-top: 0;
    padding-bottom: 30px; }
    @media screen and (max-width: 1366px) {
      .text-section__content--medium .text-section__content-paragraph {
        max-width: 70%; } }
  .text-section__content--wide .text-section__content-paragraph {
    padding: 50px 0; }
  .text-section__content--small .text-section__content-paragraph {
    padding: 5px 0; }
  .text-section__content-title {
    padding-bottom: 35px;
    color: #808080;
    font-weight: 400;
    line-height: 1.25; }
  .text-section__content-text {
    color: #333333;
    font-family: "ff-tisa-web-pro", Times, serif;
    font-size: 20px;
    font-weight: 400;
    line-height: 1.55; }
  .text-section__content-hyperlink {
    color: #c6007b;
    text-decoration: none; }

.image-section {
  position: relative;
  width: 100%;
  background-color: #e0e0e0;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }
  .image-section__image-container {
    display: inline-block;
    position: relative;
    width: 100%;
    height: 100%;
    margin-top: -1px;
    background-color: #e0e0e0;
    text-align: center;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .image-section__image {
    width: 100%;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }

.contact {
  position: relative;
  background-position: 0px -35px;
  background-size: 100%;
  text-align: center; }
  @media screen and (max-width: 959px) {
    .contact {
      background-position: 0px -20px; } }
  @media screen and (max-width: 959px) {
    .contact {
      background-position: 0px -16px; } }
  .contact__top {
    position: absolute;
    top: -3.5%;
    left: 0;
    width: 100%;
    height: 35px; }
    @media screen and (max-width: 1366px) {
      .contact__top {
        top: -1.4%; } }
    @media screen and (max-width: 959px) {
      .contact__top {
        top: -1.5%; } }
  .contact__top-triangle {
    position: absolute;
    background-size: calc(200% + 68px);
    width: calc(50% - 33px);
    height: 35px; }
    .contact__top-triangle:nth-child(1) {
      left: 0; }
      .contact__top-triangle:nth-child(1):after {
        position: absolute;
        right: -35px;
        content: '';
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 35px 0 0 35px;
        border-color: transparent transparent transparent #e0e0e0; }
        @media screen and (max-width: 1366px) {
          .contact__top-triangle:nth-child(1):after {
            right: -19px;
            border-width: 20px 0 0 20px; } }
        @media screen and (max-width: 959px) {
          .contact__top-triangle:nth-child(1):after {
            right: -16px;
            border-width: 16px 0 0 16px; } }
    .contact__top-triangle:nth-child(2) {
      right: 0; }
      .contact__top-triangle:nth-child(2):after {
        position: absolute;
        left: -35px;
        content: '';
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 0 0 35px 35px;
        border-color: transparent transparent #e0e0e0 transparent; }
        @media screen and (max-width: 1366px) {
          .contact__top-triangle:nth-child(2):after {
            left: -19px;
            border-width: 0 0 20px 20px; } }
        @media screen and (max-width: 959px) {
          .contact__top-triangle:nth-child(2):after {
            left: -16px;
            border-width: 0 0 16px 16px; } }
    @media screen and (max-width: 1366px) {
      .contact__top-triangle {
        background-size: calc(200% + 38px);
        width: calc(50% - 18px);
        height: 20px; } }
    @media screen and (max-width: 959px) {
      .contact__top-triangle {
        background-size: calc(200% + 30px);
        width: calc(50% - 16px);
        height: 16px; } }
  .contact__items {
    position: relative;
    padding-top: 317px;
    padding-bottom: 467px; }
    @media screen and (max-width: 1366px) {
      .contact__items {
        padding-top: 267px;
        padding-bottom: 427px; } }
    @media screen and (max-width: 959px) {
      .contact__items {
        padding-top: 87px;
        padding-bottom: 247px; } }
  .contact__double-item, .contact__logo-item {
    position: relative;
    display: inline-block;
    height: 200px;
    font-size: 0; }
    @media screen and (max-width: 1366px) {
      .contact__double-item, .contact__logo-item {
        display: block;
        margin-bottom: 30px; } }
  .contact__double-item {
    padding-right: 30px; }
    @media screen and (max-width: 1366px) {
      .contact__double-item {
        padding-right: 0; } }
  .contact__logo-item {
    padding-left: 40px; }
    @media screen and (max-width: 1366px) {
      .contact__logo-item {
        padding-left: 0; } }
  .contact__item {
    position: relative;
    display: inline-block;
    width: 200px;
    height: 200px;
    margin-right: 0;
    border: 0px solid;
    border-radius: 8px;
    background-color: #fff;
    vertical-align: bottom; }
  .contact__item-content {
    margin-left: -1px;
    padding: 16px; }
  .contact__person-name {
    padding-bottom: 10px;
    color: #333333;
    font-family: "ff-tisa-sans-web-pro", sans-serif;
    font-size: 20px;
    font-weight: 400; }
  .contact__person-data {
    color: #808080;
    font-family: "ff-tisa-sans-web-pro", sans-serif;
    font-size: 14px;
    font-weight: 400; }
  .contact__icons {
    position: absolute;
    bottom: 8%; }
  .contact__icon-container {
    position: relative;
    display: inline-block;
    width: 45px;
    height: 45px;
    margin-right: 20px; }
  .contact__icon {
    position: relative;
    display: block;
    overflow: hidden;
    width: 45px;
    height: 0;
    padding-bottom: 43px;
    border: 1px solid #d6007f;
    border-radius: 100%;
    background-color: #fff;
    color: #d6007f;
    font-size: 25px;
    text-decoration: none;
    -webkit-transition: color .7s, background-color .7s;
    transition: color .7s, background-color .7s; }
    .contact__icon:before {
      position: absolute;
      top: 50%;
      left: 50%;
      -webkit-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%); }
  .contact__icon-container:hover .contact__icon {
    background-color: #d6007f;
    color: #fff; }
  .contact__hover-phone {
    position: absolute;
    opacity: 0;
    visibility: hidden;
    top: 50%;
    left: 50%;
    width: 130px;
    height: 60px;
    line-height: 30px;
    z-index: 2;
    padding-left: 17px;
    margin-left: 23px;
    background-color: #fff;
    color: #d6007f;
    font-size: 20px;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
    white-space: nowrap;
    -webkit-transition: visibility .7s ease, opacity .7s ease;
    transition: visibility .7s ease, opacity .7s ease; }
  .contact__icon-container:hover .contact__hover-phone {
    opacity: 1;
    visibility: visible; }
  .contact__icon-mail {
    font-size: 18px; }
  .contact__bmwi {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
